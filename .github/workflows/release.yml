name: Release

on:
  push:
    branches: ["main"]
  

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:

  versioning:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3

    - run: npm install --save-dev @semantic-release/changelog @semantic-release/exec @semantic-release/git conventional-changelog-eslint semantic-release && npx semantic-release
       

  # rebase:
  #   name: Rebase from main into main-dev
  #   needs: versioning
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the latest code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         ref: 'main'
  #         persist-credentials: false
      
  #     - name: Perform Rebase
  #       run: |
  #         git checkout main-dev
  #         git rebase origin/main

  #     - name: Push to protected branch
  #       uses: CasperWA/push-protected@v2
  #       with:
  #         token: ${{ secrets.REBASE }}
  #         branch: main-dev
  #         unprotect_reviews: True
  #         force: True

  publish_hashes:
    name: Add hashes in release notes
    runs-on: ubuntu-latest
    needs: versioning
    steps:

    - name: Get last release ID
      id: last_release
      run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.SEMANTIC_RELEASE_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          echo "last_release_id=$(echo "$response" | jq -r '.id')" >> $GITHUB_OUTPUT

    - uses: robinraju/release-downloader@v1.8
      name: Download release assets
      with:
        latest: true
        fileName: "*"
        out-file-path: "downloads"
        tarBall: true
        zipBall: true

    - name: Calculate source hashes
      id: hashes
      run: |
        source_zip_path=$(find $GITHUB_WORKSPACE/downloads -name "*.zip")
        zip_hash=$(sha256sum "$source_zip_path" | awk '{print $1}')
        source_tar_path=$(find $GITHUB_WORKSPACE/downloads -name "*.tar.gz" ! -name "docs.tar.gz")
        tar_hash=$(sha256sum "$source_tar_path" | awk '{print $1}')
        echo "zip_hash=$zip_hash" >> $GITHUB_OUTPUT
        echo "tar_hash=$tar_hash" >> $GITHUB_OUTPUT
          

    - name: Upload hashes to release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        id: ${{ steps.last_release.outputs.last_release_id }}
        prerelease: false
        replacebody: false
        body: |
            ## Hashes
            * Source code (zip) `:` `${{ steps.calculate_hashes.outputs.zip_hash }}` 
            * Source code (tar.gz) `:` `${{ steps.calculate_hashes.outputs.tar_hash }}`