name: Release

on:
  push:
    branches: ["main"]

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:

  versioning:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    # - run: |
    #       cd /home/runner/work/test-rebase/
    #       echo '<details>' >> SourceCodeSHA256.md
    #       echo '<summary>Assets</summary>' >> SourceCodeSHA256.md
    #       echo "" >> SourceCodeSHA256.md
    #       find . -type f -not -path './test-rebase/.git/*' -not -name 'SourceCodeSHA256.md' -exec sh -c 'echo "* $(realpath --relative-to=. {}) : \`$(sha256sum {} | awk "{print \$1}")\`"' \; >> SourceCodeSHA256.md
    #       echo '</details>' >> SourceCodeSHA256.md

    - run: npm install --save-dev @semantic-release/changelog @semantic-release/exec @semantic-release/git conventional-changelog-eslint semantic-release && npx semantic-release

    # - name: Update assets
    #   id: update_release
    #   uses: tubone24/update_release@v1.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
    #   with:
    #     body: test_body # new body text

    - name: Add Text to Release
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const latestRelease = releases[0];
            const textToAdd = `SourceCode.zip sha256\nSourceCode.tar.gz sha256`;

            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: latestRelease.id,
              body: latestRelease.body + '\n\n' + textToAdd,
            });


  rebase:
    name: Rebase from main into main-dev
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'main'
          persist-credentials: false
      
      - name: Perform Rebase
        run: |
          git checkout main-dev
          git rebase origin/main

      - name: Push to protected branch
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.REBASE }}
          branch: main-dev
          unprotect_reviews: True
          force: True

####